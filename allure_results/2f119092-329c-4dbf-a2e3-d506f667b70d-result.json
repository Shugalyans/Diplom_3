{"name": "Проверка, что при оформлении нового заказа его номер появляется в Ленте заказов в статусе в Работе", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_order_list_page.TestOrderListPage object at 0x000001BDDFF52E70>, driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"677f9239-4661-467b-b21f-0f61bb1593de\")>, make_new_user = <Response [200]>\n\n    @allure.title('Проверка, что при оформлении нового заказа его номер появляется в Ленте заказов в статусе в Работе')\n    @allure.description('после оформления заказа его номер появляется в разделе В работе')\n    def test_check_order_number(self, driver, make_new_user):\n        make_new_user\n        login_page = LoginPage(driver)\n        order_list_page = OrderListPage(driver)\n        main_page = MainPage(driver)\n    \n        # создадим новый заказ, чтобы получить его номер\n        order_list_page.set_current_url(MAIN_PAGE_URL) # заходим на главную страницу\n        login_page.login_user() # создадим пользователя и залогинимся под ним\n        main_page.ingredient_move_to_basket() # закинем ингредиенты в корзину\n        main_page.create_order_button_click() # появилась кнопка Оформить заказ, кликаем на нее\n        order_list_page.wait_while_be_clickable(OrderListPageLocators.CLOSE_ORDER_INFO) # Ждем пока окно с информацией о заказе прогрузится\n>       order_list_page.wait_while_text_change() # Ждем пока в окне с информацией о заказе изменится базовый ID=9999\n\ntests\\test_order_list_page.py:129: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\order_list_page.py:28: in wait_while_text_change\n    WebDriverWait(self.driver, 10).until_not(expected_conditions.text_to_be_present_in_element(OrderListPageLocators.ORDER_ID,'9999'))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"677f9239-4661-467b-b21f-0f61bb1593de\")>, method = <function text_to_be_present_in_element.<locals>._predicate at 0x000001BDE04D76A0>, message = ''\n\n    def until_not(self, method: Callable[[D], T], message: str = \"\") -> Union[T, Literal[True]]:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value evaluates to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`, or\n                  ``True`` if `method` has raised one of the ignored exceptions\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if not value:\n                    return value\n            except self._ignored_exceptions:\n                return True\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:128: TimeoutException"}, "description": "после оформления заказа его номер появляется в разделе В работе", "steps": [{"name": "Вводим нужный URL", "status": "passed", "parameters": [{"name": "URL", "value": "'https://stellarburgers.nomoreparties.site/'"}], "start": 1721931276750, "stop": 1721931277030}, {"name": "Логинимся под пользователем", "status": "passed", "steps": [{"name": "Ожидаем пока элемент исчезнет с страницы", "status": "passed", "start": 1721931277031, "stop": 1721931277569}, {"name": "Кликаем по элементу с нужным локатором", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//button[text()='Войти в аккаунт']\")"}], "start": 1721931277569, "stop": 1721931277834}, {"name": "Прокидываем данные в локатор (если он поле ввода данных)", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//label[text()='Email']/../input\")"}, {"name": "data", "value": "'Shemakhanskiy@yandex.ru'"}], "start": 1721931277834, "stop": 1721931277905}, {"name": "Прокидываем данные в локатор (если он поле ввода данных)", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//label[text()='Пароль']/../input\")"}, {"name": "data", "value": "'12345678'"}], "start": 1721931277905, "stop": 1721931277933}, {"name": "Кликаем по элементу с нужным локатором", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//button[text()='Войти']\")"}], "start": 1721931277933, "stop": 1721931278162}], "start": 1721931277031, "stop": 1721931278162}, {"name": "Перетягиваем элемент в корзину", "status": "passed", "start": 1721931278162, "stop": 1721931278751}, {"name": "Нажимаем на кнопку Оформить заказ", "status": "passed", "steps": [{"name": "Кликаем по элементу с нужным локатором", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//button[text()='Оформить заказ']\")"}], "start": 1721931278751, "stop": 1721931278969}], "start": 1721931278751, "stop": 1721931278969}, {"name": "Ожидаем пока элемент станет доступен для нажатия", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//button[@class='Modal_modal__close_modified__3V5XS Modal_modal__close__TnseK']\")"}], "start": 1721931278969, "stop": 1721931279002}, {"name": "Ожидаем пока поменяется текст в локаторе", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"C:\\Users\\user\\Desktop\\Diplom\\Diplom_3\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\user\\Desktop\\Diplom\\Diplom_3\\pages\\order_list_page.py\", line 28, in wait_while_text_change\n    WebDriverWait(self.driver, 10).until_not(expected_conditions.text_to_be_present_in_element(OrderListPageLocators.ORDER_ID,'9999'))\n  File \"C:\\Users\\user\\Desktop\\Diplom\\Diplom_3\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 128, in until_not\n    raise TimeoutException(message)\n"}, "start": 1721931279002, "stop": 1721931289030}], "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1721931276749, "stop": 1721931289033, "uuid": "a3ca04dd-916a-43ab-8332-51ede90a55e3", "historyId": "ae7df195a4bb3f6e82c48e19c44e6568", "testCaseId": "f5255f65ffa3cc75f4b69862dacf227e", "fullName": "tests.test_order_list_page.TestOrderListPage#test_check_order_number", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_list_page"}, {"name": "subSuite", "value": "TestOrderListPage"}, {"name": "host", "value": "Mike"}, {"name": "thread", "value": "21104-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_list_page"}]}